{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nexport const ALLART = \"allArt\"; // Pass an array of art objects and create a new 2-D array of art objects\n// [artist's name][art object]\n\nfunction sort_by_artist(art) {\n  let sort_by_artist = [];\n\n  for (const i in art) {\n    if (!sort_by_artist[art[i].artist]) {\n      sort_by_artist[art[i].artist] = [];\n    }\n\n    sort_by_artist[art[i].artist].push(art[i]);\n  }\n\n  return sort_by_artist;\n}\n\nconst artInitialState = {\n  art: [],\n  favorites: []\n};\nconst favoriteInitialState = {\n  art: []\n};\nconst artSlice = createSlice({\n  name: \"art\",\n  initialState: artInitialState,\n  reducers: {\n    getAllArt(state, action) {\n      const sorted_by_artist = sort_by_artist(action.payload);\n      state = sorted_by_artist;\n    } //getFavorites() {},\n    //addFavorite(state, action) {},\n    //removeFavorite(state, action) {},\n\n\n  }\n});\nconst favoriteSlice = createSlice({\n  name: \"favorite\",\n  initialState: favoriteInitialState\n});\n\nfunction artReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : artInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // This is the action type for showing all art (on page load)\n  if (action.type === \"allArt\") {\n    const sorted_by_artist = sort_by_artist(action.payload);\n    return {\n      art: sorted_by_artist,\n      favorites: state.favorites\n    };\n  }\n  /* if(action.type === \"addFavorite\") {\r\n    const newFav = [...state.favorites];\r\n    newFave.push(action.payload);\r\n    return {\r\n      art: state.art,\r\n      favorites\r\n    }\r\n  } */\n\n\n  return state;\n} //const artStore = createStore(artReducer); old redux\n\n\nconst artStore = configureStore({\n  reducer: artSlice.reducer\n});\nexport default artStore;","map":{"version":3,"sources":["C:/Users/E/OneDrive/Documents/CS Classes and Programs/React/aesthetic-productions/client/src/store/index.js"],"names":["createSlice","configureStore","ALLART","sort_by_artist","art","i","artist","push","artInitialState","favorites","favoriteInitialState","artSlice","name","initialState","reducers","getAllArt","state","action","sorted_by_artist","payload","favoriteSlice","artReducer","type","artStore","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAEP;AACA;;AACA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAID,cAAc,GAAG,EAArB;;AAEA,OAAK,MAAME,CAAX,IAAgBD,GAAhB,EAAqB;AACnB,QAAI,CAACD,cAAc,CAACC,GAAG,CAACC,CAAD,CAAH,CAAOC,MAAR,CAAnB,EAAoC;AAClCH,MAAAA,cAAc,CAACC,GAAG,CAACC,CAAD,CAAH,CAAOC,MAAR,CAAd,GAAgC,EAAhC;AACD;;AACDH,IAAAA,cAAc,CAACC,GAAG,CAACC,CAAD,CAAH,CAAOC,MAAR,CAAd,CAA8BC,IAA9B,CAAmCH,GAAG,CAACC,CAAD,CAAtC;AACD;;AACD,SAAOF,cAAP;AACD;;AAED,MAAMK,eAAe,GAAG;AACtBJ,EAAAA,GAAG,EAAE,EADiB;AAEtBK,EAAAA,SAAS,EAAE;AAFW,CAAxB;AAKA,MAAMC,oBAAoB,GAAG;AAC3BN,EAAAA,GAAG,EAAE;AADsB,CAA7B;AAIA,MAAMO,QAAQ,GAAGX,WAAW,CAAC;AAC3BY,EAAAA,IAAI,EAAE,KADqB;AAE3BC,EAAAA,YAAY,EAAEL,eAFa;AAG3BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,gBAAgB,GAAGf,cAAc,CAACc,MAAM,CAACE,OAAR,CAAvC;AACAH,MAAAA,KAAK,GAAGE,gBAAR;AACD,KAJO,CAKR;AACA;AACA;;;AAPQ;AAHiB,CAAD,CAA5B;AAcA,MAAME,aAAa,GAAGpB,WAAW,CAAC;AAChCY,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAEH;AAFkB,CAAD,CAAjC;;AAKA,SAASW,UAAT,GAAqD;AAAA,MAAjCL,KAAiC,uEAAzBR,eAAyB;AAAA,MAARS,MAAQ;;AACnD;AACA,MAAIA,MAAM,CAACK,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMJ,gBAAgB,GAAGf,cAAc,CAACc,MAAM,CAACE,OAAR,CAAvC;AACA,WAAO;AACLf,MAAAA,GAAG,EAAEc,gBADA;AAELT,MAAAA,SAAS,EAAEO,KAAK,CAACP;AAFZ,KAAP;AAID;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,SAAOO,KAAP;AACD,C,CAED;;;AACA,MAAMO,QAAQ,GAAGtB,cAAc,CAAC;AAACuB,EAAAA,OAAO,EAAEb,QAAQ,CAACa;AAAnB,CAAD,CAA/B;AAEA,eAAeD,QAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport const ALLART = \"allArt\";\r\n\r\n// Pass an array of art objects and create a new 2-D array of art objects\r\n// [artist's name][art object]\r\nfunction sort_by_artist(art) {\r\n  let sort_by_artist = [];\r\n\r\n  for (const i in art) {\r\n    if (!sort_by_artist[art[i].artist]) {\r\n      sort_by_artist[art[i].artist] = [];\r\n    }\r\n    sort_by_artist[art[i].artist].push(art[i]);\r\n  }\r\n  return sort_by_artist;\r\n}\r\n\r\nconst artInitialState = {\r\n  art: [],\r\n  favorites: [],\r\n};\r\n\r\nconst favoriteInitialState = {\r\n  art: [],\r\n};\r\n\r\nconst artSlice = createSlice({\r\n  name: \"art\",\r\n  initialState: artInitialState,\r\n  reducers: {\r\n    getAllArt(state, action) {\r\n      const sorted_by_artist = sort_by_artist(action.payload);\r\n      state = sorted_by_artist;\r\n    },\r\n    //getFavorites() {},\r\n    //addFavorite(state, action) {},\r\n    //removeFavorite(state, action) {},\r\n  },\r\n});\r\n\r\nconst favoriteSlice = createSlice({\r\n  name: \"favorite\",\r\n  initialState: favoriteInitialState,\r\n});\r\n\r\nfunction artReducer(state = artInitialState, action) {\r\n  // This is the action type for showing all art (on page load)\r\n  if (action.type === \"allArt\") {\r\n    const sorted_by_artist = sort_by_artist(action.payload);\r\n    return {\r\n      art: sorted_by_artist,\r\n      favorites: state.favorites,\r\n    };\r\n  }\r\n\r\n  /* if(action.type === \"addFavorite\") {\r\n    const newFav = [...state.favorites];\r\n    newFave.push(action.payload);\r\n    return {\r\n      art: state.art,\r\n      favorites\r\n    }\r\n  } */\r\n\r\n  return state;\r\n}\r\n\r\n//const artStore = createStore(artReducer); old redux\r\nconst artStore = configureStore({reducer: artSlice.reducer});\r\n\r\nexport default artStore;\r\n"]},"metadata":{},"sourceType":"module"}