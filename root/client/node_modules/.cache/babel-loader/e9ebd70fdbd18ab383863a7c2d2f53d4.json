{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E\\\\OneDrive\\\\Documents\\\\CS Classes and Programs\\\\React\\\\aesthetic-productions\\\\client\\\\src\\\\ui\\\\SwiperUI.js\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport Card from \"./Card\";\nimport SwiperSlideUI from \"./SwiperSlideUI\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/swiper-bundle.min.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SwiperUI(props) {\n  SwiperCore.use([Navigation]); // These nested lists do not need to exist this way.\n  // Probably move the outer map to the parent component.\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: Object.keys(props.art).map(artist => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: artist\n        }, artist, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n          modules: [Navigation],\n          navigation: true,\n          observer: true // required for nav\n          ,\n          observeParents: true // required for nav\n          ,\n          spaceBetween: 30,\n          slidesPerView: 5,\n          children: props.art[artist].map(art => {\n            return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n              children: /*#__PURE__*/_jsxDEV(SwiperSlideUI, {\n                art: art // pass the whole object for use with context. Maybe find a better way to do this\n                ,\n                url: art.imageUrl,\n                title: art.title,\n                setIsViewing: props.setIsViewing,\n                setCurrentSrc: props.setCurrentSrc,\n                setCurrentTitle: props.setCurrentTitle\n              }, art._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this)\n            }, art._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this);\n          })\n        }, artist, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n  /* return (\r\n    <Swiper\r\n      modules={[Navigation]}\r\n      navigation\r\n      observer // required for nav\r\n      observeParents // required for nav\r\n      spaceBetween={30}\r\n      slidesPerView={5}\r\n    >\r\n      {props.art.map((art) => {\r\n        return (\r\n          <SwiperSlide key={art._id}>\r\n            <Card\r\n              key={art._id}\r\n              art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n              url={art.imageUrl}\r\n              title={art.title}\r\n              setIsViewing={props.setIsViewing}\r\n              setCurrentSrc={props.setCurrentSrc}\r\n              setCurrentTitle={props.setCurrentTitle}\r\n            />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  ); */\n}\n\n_c = SwiperUI;\nexport default SwiperUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwiperUI\");","map":{"version":3,"sources":["C:/Users/E/OneDrive/Documents/CS Classes and Programs/React/aesthetic-productions/client/src/ui/SwiperUI.js"],"names":["Swiper","SwiperSlide","SwiperCore","Navigation","Card","SwiperSlideUI","React","SwiperUI","props","use","Object","keys","art","map","artist","imageUrl","title","setIsViewing","setCurrentSrc","setCurrentTitle","_id"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,UAArB,QAAuC,QAAvC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,uBAAP;AACA,OAAO,8BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBN,EAAAA,UAAU,CAACO,GAAX,CAAe,CAACN,UAAD,CAAf,EADuB,CAGvB;AACA;;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGO,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,GAAlB,EAAuBC,GAAvB,CAA4BC,MAAD,IAAY;AACtC,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAA,oBAAkBA;AAAlB,WAASA,MAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAEE,UAAA,OAAO,EAAE,CAACX,UAAD,CAFX;AAGE,UAAA,UAAU,MAHZ;AAIE,UAAA,QAAQ,MAJV,CAIW;AAJX;AAKE,UAAA,cAAc,MALhB,CAKiB;AALjB;AAME,UAAA,YAAY,EAAE,EANhB;AAOE,UAAA,aAAa,EAAE,CAPjB;AAAA,oBASGK,KAAK,CAACI,GAAN,CAAUE,MAAV,EAAkBD,GAAlB,CAAuBD,GAAD,IAAS;AAC9B,gCACE,QAAC,WAAD;AAAA,qCACE,QAAC,aAAD;AAEE,gBAAA,GAAG,EAAEA,GAFP,CAEY;AAFZ;AAGE,gBAAA,GAAG,EAAEA,GAAG,CAACG,QAHX;AAIE,gBAAA,KAAK,EAAEH,GAAG,CAACI,KAJb;AAKE,gBAAA,YAAY,EAAER,KAAK,CAACS,YALtB;AAME,gBAAA,aAAa,EAAET,KAAK,CAACU,aANvB;AAOE,gBAAA,eAAe,EAAEV,KAAK,CAACW;AAPzB,iBACOP,GAAG,CAACQ,GADX;AAAA;AAAA;AAAA;AAAA;AADF,eAAkBR,GAAG,CAACQ,GAAtB;AAAA;AAAA;AAAA;AAAA,oBADF;AAaD,WAdA;AATH,WACON,MADP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA8BD,KA/BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;KAnEQP,Q;AAqET,eAAeA,QAAf","sourcesContent":["import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\n\r\nimport Card from \"./Card\";\r\nimport SwiperSlideUI from \"./SwiperSlideUI\";\r\n\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport React from \"react\";\r\n\r\nfunction SwiperUI(props) {\r\n  SwiperCore.use([Navigation]);\r\n\r\n  // These nested lists do not need to exist this way.\r\n  // Probably move the outer map to the parent component.\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(props.art).map((artist) => {\r\n        return (\r\n          <React.Fragment>\r\n            <h1 key={artist}>{artist}</h1>\r\n            <Swiper\r\n              key={artist}\r\n              modules={[Navigation]}\r\n              navigation\r\n              observer // required for nav\r\n              observeParents // required for nav\r\n              spaceBetween={30}\r\n              slidesPerView={5}\r\n            >\r\n              {props.art[artist].map((art) => {\r\n                return (\r\n                  <SwiperSlide key={art._id}>\r\n                    <SwiperSlideUI\r\n                      key={art._id}\r\n                      art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n                      url={art.imageUrl}\r\n                      title={art.title}\r\n                      setIsViewing={props.setIsViewing}\r\n                      setCurrentSrc={props.setCurrentSrc}\r\n                      setCurrentTitle={props.setCurrentTitle}\r\n                    />\r\n                  </SwiperSlide>\r\n                );\r\n              })}\r\n            </Swiper>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n  /* return (\r\n    <Swiper\r\n      modules={[Navigation]}\r\n      navigation\r\n      observer // required for nav\r\n      observeParents // required for nav\r\n      spaceBetween={30}\r\n      slidesPerView={5}\r\n    >\r\n      {props.art.map((art) => {\r\n        return (\r\n          <SwiperSlide key={art._id}>\r\n            <Card\r\n              key={art._id}\r\n              art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n              url={art.imageUrl}\r\n              title={art.title}\r\n              setIsViewing={props.setIsViewing}\r\n              setCurrentSrc={props.setCurrentSrc}\r\n              setCurrentTitle={props.setCurrentTitle}\r\n            />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  ); */\r\n}\r\n\r\nexport default SwiperUI;\r\n"]},"metadata":{},"sourceType":"module"}