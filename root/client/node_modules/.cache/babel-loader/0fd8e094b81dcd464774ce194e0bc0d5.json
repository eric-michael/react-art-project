{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E\\\\OneDrive\\\\Documents\\\\CS Classes and Programs\\\\React\\\\aesthetic-productions\\\\client\\\\src\\\\ui\\\\SwiperUI.js\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport Card from \"./Card\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/swiper-bundle.min.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SwiperUI(props) {\n  SwiperCore.use([Navigation]);\n  console.log(props.art);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: props.art.map(artist => {\n      console.log(artist);\n      return /*#__PURE__*/_jsxDEV(Swiper, {\n        modules: [Navigation],\n        navigation: true,\n        observer: true // required for nav\n        ,\n        observeParents: true // required for nav\n        ,\n        spaceBetween: 30,\n        slidesPerView: 5,\n        children: artist.map(art => {\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              art: art // pass the whole object for use with context. Maybe find a better way to do this\n              ,\n              url: art.imageUrl,\n              title: art.title,\n              setIsViewing: props.setIsViewing,\n              setCurrentSrc: props.setCurrentSrc,\n              setCurrentTitle: props.setCurrentTitle\n            }, art._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)\n          }, art._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n  /* return (\r\n    <Swiper\r\n      modules={[Navigation]}\r\n      navigation\r\n      observer // required for nav\r\n      observeParents // required for nav\r\n      spaceBetween={30}\r\n      slidesPerView={5}\r\n    >\r\n      {props.art.map((art) => {\r\n        return (\r\n          <SwiperSlide key={art._id}>\r\n            <Card\r\n              key={art._id}\r\n              art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n              url={art.imageUrl}\r\n              title={art.title}\r\n              setIsViewing={props.setIsViewing}\r\n              setCurrentSrc={props.setCurrentSrc}\r\n              setCurrentTitle={props.setCurrentTitle}\r\n            />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  ); */\n}\n\n_c = SwiperUI;\nexport default SwiperUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwiperUI\");","map":{"version":3,"sources":["C:/Users/E/OneDrive/Documents/CS Classes and Programs/React/aesthetic-productions/client/src/ui/SwiperUI.js"],"names":["Swiper","SwiperSlide","SwiperCore","Navigation","Card","React","SwiperUI","props","use","console","log","art","map","artist","imageUrl","title","setIsViewing","setCurrentSrc","setCurrentTitle","_id"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,UAArB,QAAuC,QAAvC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,uBAAP;AACA,OAAO,8BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBL,EAAAA,UAAU,CAACM,GAAX,CAAe,CAACL,UAAD,CAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAlB;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGJ,KAAK,CAACI,GAAN,CAAUC,GAAV,CAAeC,MAAD,IAAY;AACzBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,0BACA,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,CAACV,UAAD,CADX;AAEE,QAAA,UAAU,MAFZ;AAGE,QAAA,QAAQ,MAHV,CAGW;AAHX;AAIE,QAAA,cAAc,MAJhB,CAIiB;AAJjB;AAKE,QAAA,YAAY,EAAE,EALhB;AAME,QAAA,aAAa,EAAE,CANjB;AAAA,kBAQGU,MAAM,CAACD,GAAP,CAAYD,GAAD,IAAS;AACnB,8BACE,QAAC,WAAD;AAAA,mCACE,QAAC,IAAD;AAEE,cAAA,GAAG,EAAEA,GAFP,CAEY;AAFZ;AAGE,cAAA,GAAG,EAAEA,GAAG,CAACG,QAHX;AAIE,cAAA,KAAK,EAAEH,GAAG,CAACI,KAJb;AAKE,cAAA,YAAY,EAAER,KAAK,CAACS,YALtB;AAME,cAAA,aAAa,EAAET,KAAK,CAACU,aANvB;AAOE,cAAA,eAAe,EAAEV,KAAK,CAACW;AAPzB,eACOP,GAAG,CAACQ,GADX;AAAA;AAAA;AAAA;AAAA;AADF,aAAkBR,GAAG,CAACQ,GAAtB;AAAA;AAAA;AAAA;AAAA,kBADF;AAaD,SAdA;AARH;AAAA;AAAA;AAAA;AAAA,cADA;AAyBD,KA3BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgCA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;KA9DQb,Q;AAgET,eAAeA,QAAf","sourcesContent":["import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport React from \"react\";\r\n\r\nfunction SwiperUI(props) {\r\n  SwiperCore.use([Navigation]);\r\n  console.log(props.art);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.art.map((artist) => {\r\n        console.log(artist);\r\n        return(\r\n        <Swiper\r\n          modules={[Navigation]}\r\n          navigation\r\n          observer // required for nav\r\n          observeParents // required for nav\r\n          spaceBetween={30}\r\n          slidesPerView={5}\r\n        >\r\n          {artist.map((art) => {\r\n            return (\r\n              <SwiperSlide key={art._id}>\r\n                <Card\r\n                  key={art._id}\r\n                  art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n                  url={art.imageUrl}\r\n                  title={art.title}\r\n                  setIsViewing={props.setIsViewing}\r\n                  setCurrentSrc={props.setCurrentSrc}\r\n                  setCurrentTitle={props.setCurrentTitle}\r\n                />\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n        </Swiper>);\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n  /* return (\r\n    <Swiper\r\n      modules={[Navigation]}\r\n      navigation\r\n      observer // required for nav\r\n      observeParents // required for nav\r\n      spaceBetween={30}\r\n      slidesPerView={5}\r\n    >\r\n      {props.art.map((art) => {\r\n        return (\r\n          <SwiperSlide key={art._id}>\r\n            <Card\r\n              key={art._id}\r\n              art={art} // pass the whole object for use with context. Maybe find a better way to do this\r\n              url={art.imageUrl}\r\n              title={art.title}\r\n              setIsViewing={props.setIsViewing}\r\n              setCurrentSrc={props.setCurrentSrc}\r\n              setCurrentTitle={props.setCurrentTitle}\r\n            />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  ); */\r\n}\r\n\r\nexport default SwiperUI;\r\n"]},"metadata":{},"sourceType":"module"}